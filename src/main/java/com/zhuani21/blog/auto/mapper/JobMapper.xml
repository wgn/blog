<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhuani21.blog.auto.mapper.JobMapper" >
  <resultMap id="BaseResultMap" type="com.zhuani21.blog.auto.bean.Job" >
    <id column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="job_cycle_type" property="jobCycleType" jdbcType="VARCHAR" />
    <result column="job_description" property="jobDescription" jdbcType="VARCHAR" />
    <result column="job_link" property="jobLink" jdbcType="VARCHAR" />
    <result column="job_status" property="jobStatus" jdbcType="VARCHAR" />
    <result column="old_filename" property="oldFilename" jdbcType="VARCHAR" />
    <result column="filepath" property="filepath" jdbcType="VARCHAR" />
    <result column="cycle_setting" property="cycleSetting" jdbcType="VARCHAR" />
    <result column="reread_time" property="rereadTime" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    job_id, job_name, job_cycle_type, job_description, job_link, job_status, old_filename, 
    filepath, cycle_setting, reread_time, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zhuani21.blog.auto.bean.JobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from job
    where job_id = #{jobId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from job
    where job_id = #{jobId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhuani21.blog.auto.bean.JobExample" >
    delete from job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zhuani21.blog.auto.bean.Job" >
    insert into job (job_id, job_name, job_cycle_type, 
      job_description, job_link, job_status, 
      old_filename, filepath, cycle_setting, 
      reread_time, create_time)
    values (#{jobId,jdbcType=INTEGER}, #{jobName,jdbcType=VARCHAR}, #{jobCycleType,jdbcType=VARCHAR}, 
      #{jobDescription,jdbcType=VARCHAR}, #{jobLink,jdbcType=VARCHAR}, #{jobStatus,jdbcType=VARCHAR}, 
      #{oldFilename,jdbcType=VARCHAR}, #{filepath,jdbcType=VARCHAR}, #{cycleSetting,jdbcType=VARCHAR}, 
      #{rereadTime,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zhuani21.blog.auto.bean.Job" >
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="jobName != null" >
        job_name,
      </if>
      <if test="jobCycleType != null" >
        job_cycle_type,
      </if>
      <if test="jobDescription != null" >
        job_description,
      </if>
      <if test="jobLink != null" >
        job_link,
      </if>
      <if test="jobStatus != null" >
        job_status,
      </if>
      <if test="oldFilename != null" >
        old_filename,
      </if>
      <if test="filepath != null" >
        filepath,
      </if>
      <if test="cycleSetting != null" >
        cycle_setting,
      </if>
      <if test="rereadTime != null" >
        reread_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobCycleType != null" >
        #{jobCycleType,jdbcType=VARCHAR},
      </if>
      <if test="jobDescription != null" >
        #{jobDescription,jdbcType=VARCHAR},
      </if>
      <if test="jobLink != null" >
        #{jobLink,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null" >
        #{jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="oldFilename != null" >
        #{oldFilename,jdbcType=VARCHAR},
      </if>
      <if test="filepath != null" >
        #{filepath,jdbcType=VARCHAR},
      </if>
      <if test="cycleSetting != null" >
        #{cycleSetting,jdbcType=VARCHAR},
      </if>
      <if test="rereadTime != null" >
        #{rereadTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhuani21.blog.auto.bean.JobExample" resultType="java.lang.Integer" >
    select count(*) from job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update job
    <set >
      <if test="record.jobId != null" >
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.jobName != null" >
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobCycleType != null" >
        job_cycle_type = #{record.jobCycleType,jdbcType=VARCHAR},
      </if>
      <if test="record.jobDescription != null" >
        job_description = #{record.jobDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.jobLink != null" >
        job_link = #{record.jobLink,jdbcType=VARCHAR},
      </if>
      <if test="record.jobStatus != null" >
        job_status = #{record.jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.oldFilename != null" >
        old_filename = #{record.oldFilename,jdbcType=VARCHAR},
      </if>
      <if test="record.filepath != null" >
        filepath = #{record.filepath,jdbcType=VARCHAR},
      </if>
      <if test="record.cycleSetting != null" >
        cycle_setting = #{record.cycleSetting,jdbcType=VARCHAR},
      </if>
      <if test="record.rereadTime != null" >
        reread_time = #{record.rereadTime,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update job
    set job_id = #{record.jobId,jdbcType=INTEGER},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_cycle_type = #{record.jobCycleType,jdbcType=VARCHAR},
      job_description = #{record.jobDescription,jdbcType=VARCHAR},
      job_link = #{record.jobLink,jdbcType=VARCHAR},
      job_status = #{record.jobStatus,jdbcType=VARCHAR},
      old_filename = #{record.oldFilename,jdbcType=VARCHAR},
      filepath = #{record.filepath,jdbcType=VARCHAR},
      cycle_setting = #{record.cycleSetting,jdbcType=VARCHAR},
      reread_time = #{record.rereadTime,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhuani21.blog.auto.bean.Job" >
    update job
    <set >
      <if test="jobName != null" >
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobCycleType != null" >
        job_cycle_type = #{jobCycleType,jdbcType=VARCHAR},
      </if>
      <if test="jobDescription != null" >
        job_description = #{jobDescription,jdbcType=VARCHAR},
      </if>
      <if test="jobLink != null" >
        job_link = #{jobLink,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null" >
        job_status = #{jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="oldFilename != null" >
        old_filename = #{oldFilename,jdbcType=VARCHAR},
      </if>
      <if test="filepath != null" >
        filepath = #{filepath,jdbcType=VARCHAR},
      </if>
      <if test="cycleSetting != null" >
        cycle_setting = #{cycleSetting,jdbcType=VARCHAR},
      </if>
      <if test="rereadTime != null" >
        reread_time = #{rereadTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhuani21.blog.auto.bean.Job" >
    update job
    set job_name = #{jobName,jdbcType=VARCHAR},
      job_cycle_type = #{jobCycleType,jdbcType=VARCHAR},
      job_description = #{jobDescription,jdbcType=VARCHAR},
      job_link = #{jobLink,jdbcType=VARCHAR},
      job_status = #{jobStatus,jdbcType=VARCHAR},
      old_filename = #{oldFilename,jdbcType=VARCHAR},
      filepath = #{filepath,jdbcType=VARCHAR},
      cycle_setting = #{cycleSetting,jdbcType=VARCHAR},
      reread_time = #{rereadTime,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
</mapper>